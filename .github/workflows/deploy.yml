name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main  # 触发条件：main 分支有更新

  # 允许您从 Actions 选项卡手动运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过在正在进行和最新排队运行之间排队的运行。
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

# 默认为 bash shell
defaults:
  run:
    shell: bash

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 'latest' # 使用最新版本
      HUGO_ENVIRONMENT: production
      TZ: Asia/Shanghai # 设置时区，可以根据您的需求修改

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive # 如果您的主题是Git子模块，请设置为 recursive
          fetch-depth: 0 # 获取所有历史记录以获取 .GitInfo 和 .Lastmod

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '${{ env.HUGO_VERSION }}'
          extended: true # 如果您使用SCSS/Sass，则需要 extended 版本

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 根据您的项目需求选择Node.js版本
          cache: 'npm' # 缓存npm依赖

      # --- 在这里安装 PostCSS ---
      - name: Install PostCSS and its CLI
        run: npm install postcss postcss-cli

      - name: Install other Node.js dependencies # 保持这个步骤，以防你有其他项目依赖
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          # 构建时指定 baseURL，使用 GitHub Pages 提供的 URL
          # 这确保您的网站在 GitHub Pages 上能正确加载所有资源
          PUBLIC_BASE_URL: ${{ steps.pages.outputs.base_url }}
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ env.PUBLIC_BASE_URL }}/" \
            --cacheDir "${{ runner.temp }}/hugo_cache"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public # Hugo 生成的静态文件通常在 public 目录

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # 依赖于构建作业
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4